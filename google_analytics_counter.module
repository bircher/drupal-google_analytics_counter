<?php

/**
 * @file
 * Basic functions for this module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;
use Drupal\msk\MskEnvironment;
use Drupal\node\NodeInterface;

/**
 * Implements hook_help().
 */
function google_analytics_counter_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.google_analytics_counter':
      $output = file_get_contents(drupal_get_path('module', 'google_analytics_counter') . '/README.txt');;
      return nl2br($output);
  }
}

/**
 * Implements hook_cron().
 */
function google_analytics_counter_cron() {
  // Exit cron if not in Production environment.
  if (!MskEnvironment::isProduction()) {
    return FALSE;
  }

  $config = \Drupal::config('google_analytics_counter.settings');

  // $interval must be a value in seconds.
  $interval = 60 * $config->get('general_settings.cron_interval');

  // Important to set it before the job because if they take long and there is another cron triggered...
  \Drupal::state()->set('google_analytics_counter.cron_next_execution', \Drupal::time()->getRequestTime());

  // We don't want to act every time cron runs, which could be every minute.
  // To avoid this interval, set cron_interval to 0.
  if (\Drupal::time()->getRequestTime() >= \Drupal::state()->get('system.cron_last') + $interval) {
    /* @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterCommon $common */
    $common = Drupal::service('google_analytics_counter.common');
    $queue = \Drupal::queue('google_analytics_counter_worker');

    try {
      if ($common->isAuthenticated() === TRUE) {
        // Fetch the first batch to see how many there are.
        $results = $common->getChunkedResults();
        $total = $results->results->totalResults;
        for($index = 0; $index < $total / $config->get('general_settings.chunk_to_fetch'); $index++) {
          // Add a queue item to fetch for all chunks.
          $queue->createItem(['type' => 'fetch', 'index' => $index]);
        }

        // Queue all the published nodes to be counted
        $ids = \Drupal::entityQuery('node')
          ->condition('status', NodeInterface::PUBLISHED)
          ->execute();
        foreach ($ids as $nid) {
          $queue->createItem(['type' => 'count', 'nid' => $nid]);
        }
      }
      else {
        \Drupal::logger('google_analytics_counter')->alert('Google Analytics Counter is not authenticated.');
      }
    }
    catch (RuntimeException $e) {
      \Drupal::logger('google_analytics_counter')->alert('Cron experienced a problem: ' . $e->getMessage());
    }
  }
}

/**
 * Implements hook_theme().
 */
function google_analytics_counter_theme() {
  return [
    'google_analytics_counter' => [
      'variables' => ['pageviews' => NULL],
    ],
  ];
}

/**
 * Implements hook_requirements().
 */
function google_analytics_counter_requirements($phase) {
  // Only check requirements during the run-time (aka Status Report).
  if ($phase != 'runtime') {
    return [];
  }

  $requirements = [];
  // Verify that the user has authenticated with Google Analytics.
  // If not, display a warning on the status page.
  $config = \Drupal::config('google_analytics_counter.settings');
  $t_args = [
    '%profile_id' => $config->get('general_settings.profile_id'),
    ':href' => Url::fromRoute('google_analytics_counter.admin_auth_form', [], ['absolute' => TRUE])
      ->toString(),
    '@href_here' => 'authentication here',
    '@href' => 'authenticate here',
  ];
  /* @var \Drupal\google_analytics_counter\GoogleAnalyticsCounterCommon $common */
  $common = Drupal::service('google_analytics_counter.common');

  if ($common->isAuthenticated() === TRUE) {
    $requirements['google_analytics_counter_authentication'] = [
      'title' => t('Google Analytics Counter'),
      'description' => t('Google Analytics profile ga:%profile_id has been authenticated. You can revoke <a href=:href>@href_here</a>.', $t_args),
      'severity' => REQUIREMENT_OK,
      'value' => t('A Google Analytics profile is authenticated: OK'),
    ];
  }
  else {
    $requirements['google_analytics_counter_authentication'] = [
      'title' => t('Google Analytics Counter'),
      'description' => t('No Google Analytics profile has been authenticated. Google Analytics Counter cannot fetch any new data. Please <a href=:href>@href</a>.', $t_args),
      'severity' => REQUIREMENT_ERROR,
      'value' => t('No Google Analytics profile has been authenticated!'),
    ];
  }

  return $requirements;
}

/**
 * Implements hook_queue_info_alter
 */
function google_analytics_counter_queue_info_alter(&$queues) {
  $config = \Drupal::config('google_analytics_counter.settings');
  $queues['google_analytics_counter_worker']['cron']['time'] = $config->get('general_settings.queue_time');
}